@model Website.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}


<main class="container w-50 pt-3">
    <div class="bg-lightgray border rounded">
        <section id="loginForm">
            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { role = "form" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="d-flex flex-column align-items-center pt-5">
                <h1 class="text-center pt-5 fw-bold">@ViewBag.Title</h1>
                <div class="col-md-6 text-center">
                    <br />
                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger mb-4 fw-bold" })
                    <br />
                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control form-inputs text-center", placeholder = "Username" })
                </div>
                <div class="mb-3 col-md-6  text-center">
                    <br />
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger fw-bold fw-700" })
                    <br />
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control form-inputs text-center", placeholder = "Password" })
                </div>
                <div class="mb-3 col-md-6  text-center">
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger fw-bold" })
                    <br />
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control form-inputs text-center", placeholder = "Confirm Password" })
                </div>
                <div class="mb-1 col-md-6 text-center">
                    @Html.ValidationMessageFor(m => m.RegisterToken, "", new { @class = "text-danger fw-bold" })
                    <br />
                    @Html.TextBoxFor(m => m.RegisterToken, new { @class = "form-control form-inputs text-center fs-6", placeholder = "00000000-0000-0000-0000-000000000000" })
                </div>

                <br />
                @if (!string.IsNullOrEmpty(ViewData["CaptchaError"] as string))
                {
                    <div class="col-md-12 text-center mb-3">
                        <span class="text-danger fw-bold">@ViewData["CaptchaError"]</span>
                    </div>
                }
                <div class="g-recaptcha mb-4" data-sitekey="@Logic.Captcha.SiteKey" data-theme="dark"></div>
                <div class="mb-3 col-md-6 text-center mb-5">
                    <input type="submit" value="@ViewBag.Title" class="btn btn-outline-light px-lg-5 login-button" />
                </div>
                <hr class="mb-3 hr-login" />
                <p>
                    @Html.ActionLink("Login", "Login", null, new { @class = "mx-5 login-footer-links" })
                </p>
            </div>
            }
        </section>
    </div>
</main>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}